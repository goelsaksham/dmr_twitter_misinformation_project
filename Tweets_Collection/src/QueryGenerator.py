"""
This file is responsible to convert the Query List Composition to an actual Query with the correct keywords
"""


def query_generator(query_keywords_list):
    """
    :param query_keywords_list: List form of the query.
    The list form of the query is as follows - String List List.
    e.g. - [['I', 'am', 'Groot'], ['I', 'am', 'Steve', 'Rogers']]
    Here the inner list represents the keywords which will joined in conjunctive form
    The group of inner list (outer list) represents the group of keywords generated in disjunctive form
    :return: Returns the string representation of the query after deriving it from the list form of the query
    For the above example the query produced is - "I AND am AND Groot OR I AND am AND Steve AND Rogers"
    """
    final_query = ''
    for list_index in range(len(query_keywords_list)):
        for keyword_index in range(len(query_keywords_list[list_index])):
            if keyword_index == len(query_keywords_list[list_index]) - 1:
                final_query += query_keywords_list[list_index][keyword_index]
            else:
                final_query += query_keywords_list[list_index][keyword_index] + ' AND '
        if list_index != len(query_keywords_list) - 1:
            final_query += ' OR '
    return final_query


def main(query_keywords_list, print_flag=True):
    """
    :param query_keywords_list: The list comprehension of the query keywords
    :param print_flag: A boolean stating whether to print the result of return the result
    :return: if print_flag is true, then the function prints the result, else returns the string result
    generated by the query generator.
    """
    if print_flag:
        print(query_generator(query_keywords_list))
    else:
        return query_generator(query_keywords_list)


if __name__ == '__main__':
    main([['I', 'am', 'Groot'], ['I', 'am', 'Steve', 'Rogers']])
